#!/bin/sh
# $Revision$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# (c) Tim Brown, 2012
# <mailto:timb@nth-dimension.org.uk>
# <http://www.nth-dimension.org.uk/> / <http://www.machine.org.uk/>

. lib/misc/file
. lib/misc/inetd
. lib/misc/process

filecacheprivileged="files_cache_privileged.tmp"

privileged_list () {
	if [  -f ${filecacheprivileged} ]
	then
		cat ${filecacheprivileged} | while read line
		do
			printf "$line\n"
		done
	else
		# check SUID files
		file_list_by_perm "^-??s?????? |^-??S?????? " | while read filename
		do
			file_show_nonsymlink_perms "${filename}" | while read filename _ userid _
			do
				printf "setuid ${filename} ${userid}\n" | tee -a ${filecacheprivileged}
			done
		done

		# check SGID files
		file_list_by_perm "^-?????s??? |^-?????S??? " | while read filename
		do
			file_show_nonsymlink_perms "${filename}" | while read filename _ _ groupid
			do
				printf "setgid ${filename} ${groupid}\n" | tee -a ${filecacheprivileged}
			done
		done

		# inetd services
		inetd_list ".*" | while read portnumber
		do
			privilegedfilename="`inetd_show_command "${portnumber}"`"
			file_show_real_filename "${privilegedfilename}" | while read filename
			do
				userid="`inetd_show_userid "${portnumber}"`"
				printf "inetd ${filename} ${userid}\n" | tee -a ${filecacheprivileged}
			done
			privilegedarguments="`inetd_show_arguments "${portnumber}"`"
			file_show_real_filename "${privilegedarguments}" | while read filename
			do
				userid="`inetd_show_userid "${portnumber}"`"
				printf "inetd-argument ${filename} ${userid}\n" | tee -a ${filecacheprivileged}
			done
		done

		# processes
		process_list ".*" | while read processid
		do
			filename="`process_show_command "${processid}"`"
			if [ -z "${filename}" ]
			then
				continue
			fi

			file_show_real_filename "${filename}" | while read real_filename
			do
				if [ -n "${real_filename}" ]
				then
					userid="`process_show_userid "${processid}"`"
					printf "running ${real_filename} ${userid}\n" | tee -a ${filecacheprivileged}
				fi
			done
		done

		# TODO still need to add similar checks for stuff spawned from init or cron, which has fscaps, or binds a listening port not via inetd

	fi
}

# TODO what we really need is a privileged_matches function for binary_dependency etc
